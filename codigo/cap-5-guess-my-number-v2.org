#+Title: "Guess My Number" com implementaÃ§Ã£o grÃ¡fica

No capÃ­tulo 5 do "Realm of Racket", somos apresentados Ã  biblioteca 2htdp que nos permite criar programas com interfaces grÃ¡ficas,
tambÃ©m chamdas de "GUI" (Graphic User Interface).

Ao rodar o cÃ³digo abaixo, Dr. Racket irÃ¡ abrir uma janela retangular, onde o usuÃ¡rio poderÃ¡ interagir.

O funcionamento do cÃ³digo Ã© o mesmo do cÃ³digo apresentado no capÃ­tulo.

No entanto, ao invÃ©s de usar o painel interativo do IDE, o usuÃ¡rio irÃ¡ interagir com a interface grÃ¡fica.

O comando  =(guessing-number-game)= Ã© responsÃ¡vel por dar inÃ­cio Ã  partida.

#+BEGIN_SRC scheme

#lang racket

(require 2htdp/universe 2htdp/image)

(define (guessing-number-game)
  
  (define HEIGHT 600)
  
  (define WIDTH 600)
  
  (define TEXT-SIZE 25)
  
  (define TEXT-X 10)
  
  (define TEXT-UPPER-Y 20)
  
  (define TEXT-LOWER-Y 480)
  
  (define SIZE 50)
  
  (struct interval (small big))
  
  (define HELP-TEXT
    (text "ðŸ ™ for larger numbers, ðŸ › for smaller ones"
          TEXT-SIZE
          "orange"))
  
  (define HELP-TEXT2
    (text "Press = when your number is guessed; q to quit"
          TEXT-SIZE
          "orange"))
  
  (define COLOR "red")
  
  (define MT-SC
    (place-image/align
     HELP-TEXT TEXT-X TEXT-UPPER-Y "left" "top"
     (place-image/align
      HELP-TEXT2 TEXT-X TEXT-LOWER-Y "left" "bottom"
      (empty-scene WIDTH HEIGHT))))
  
  (define (start lower upper)
    (big-bang (interval lower upper)
              (on-key deal-with-guess)
              (to-draw render)
              (stop-when single? render-last-scene)))
  
  (define (deal-with-guess w key)
    (cond [(key=? key "up") (bigger w)]
          [(key=? key "down") (smaller w)]
          [(key=? key "q") (stop-with w)]
          [(key=? key "=") (stop-with w)]
          [else w]))
  
  (define (smaller w)
    (interval (interval-small w)
              (max (interval-small w) (sub1 (guess w)))))
  
  (define (bigger w)
    (interval (min (interval-big w) (add1 (guess w)))
              (interval-big w)))
  
  (define (guess w)
    (quotient (+ (interval-small w) (interval-big w)) 2))
  
  (define (render w)
    (overlay (text (number->string (guess w)) SIZE COLOR) MT-SC))
  
  (define (render-last-scene w)
    (overlay (text "End" SIZE COLOR) MT-SC))
  
  (define (single? w)
    (= (interval-small w) (interval-big w)))
  
  (start 1 100))

(guessing-number-game)

#+END_SRC
